{"version":3,"sources":["components/Nav/index.js","components/Book/index.js","components/Search/index.js","utils/API.js","pages/BookSearch.js","pages/BooksList.js","components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","id","Book","props","description","minDesc","undefined","substring","src","img","alt","title","authors","value","button","onClick","e","addBook","deleteBook","_id","link","Search","useState","search","setSearch","console","log","htmlFor","name","type","onChange","target","handleSearch","bookData","axios","post","BookSearch","books","setBooks","bookId","bookClicked","find","book","bookImg","volumeInfo","imageLinks","smallThumbnail","data","image","API","then","res","event","query","preventDefault","get","googBooks","items","searchBooks","length","map","bookInfo","key","previewLink","BookList","useEffect","fetchBooks","booksDB","delete","bookCards","push","renderBooks","Container","fluid","children","Row","Col","size","split","join","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","role","aria-label","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.493e97f6.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Book Search\n      </a>\n      <div id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/\">\n              Search\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/list\">\n              My Collection\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}","import React from \"react\";\n\nexport default function Book(props) {\n    let description = props.description;\n    let minDesc = \"No description Available.\";\n    if(description !== \"\" && description !== undefined) {\n        minDesc = description.substring(0, 400) + \"...\";\n    }\n\n    return (\n        <div className=\"card\">\n            <div className=\"row\">\n                <div className=\"col-2\">\n                    <img src={props.img} className=\"card-img\" alt={props.title}></img>\n                </div>\n                <div className=\"card-body col-10\">\n                    <h5 className=\"card-title\">{props.title}</h5>\n                    <p className=\"card-text\">{minDesc}</p>\n                </div>\n            </div>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\">Author: {props.authors}</li>\n            </ul>\n            <div className=\"card-body\">\n                <button\n                  className=\"btn btn-primary\"\n                  value={props.button}\n                  onClick={props.button === \"add\" ? e => props.addBook(e, props.id) : () => props.deleteBook(props._id)}\n                >\n                    {props.button === \"add\"\n                    ? \"Add to Collection\"\n                : \"Delete from Collection\"}\n                </button>\n                <a href={props.link} className=\"card-link\">\n                    Visit Book\n                </a>\n            </div>\n        </div>\n    );\n}","import React, { useState } from \"react\";\n\nexport default function Search(props) {\n    const [search, setSearch] = useState(\"\");\n\n    console.log(props)\n\n    return (\n        <div>\n            <form>\n                <label htmlFor=\"search\" className=\"col-sm-1 col-form-label\">\n                    Search\n                </label>\n                <input\n                  id=\"search\"\n                  name=\"search\"\n                  type=\"text\"\n                  value={search}\n                  onChange={e => setSearch(e.target.value)}\n                  className=\"col-sm-4\"\n                  ></input>\n                  <div className=\"button-div\">\n                      <button type=\"button\" className=\"btn btn-primary\" onClick={(e) => props.handleSearch(e, search)}>\n                          Submit\n                      </button>\n                  </div>\n            </form>\n        </div>\n    );\n}","import axios from \"axios\";\n\nexport default {\n    getBooks: function() {\n        return axios.get(\"/api/books\");\n    },\n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n    },\n    saveBook: function(bookData) {\n        return axios.post(\"/api/books/\" + bookData);\n    }\n};","import React, { useState } from \"react\";\nimport Book from \"../components/Book\";\nimport Search from \"../components/Search\";\nimport axios from \"axios\";\nimport API from \"../utils/API\";\n\nexport default function BookSearch() {\n\n    const [books, setBooks] = useState([]);\n\n    const searchBooks = query => {\n       axios \n       .get(`https://www.googleapis.com/books/v1/volumes?q=${query}`)\n       .then(googBooks => {\n           setBooks(googBooks.data.items);\n       });\n    };\n\nconst addBook = (e, bookId) => {\n    console.log(e.target.value);\n    const bookClicked = books.find(book => book.id === bookId);\n    console.log(bookClicked)\n    let bookImg = \"img/noimgavail.jpg\";\n      if(bookClicked.volumeInfo.imageLinks) {\n          bookImg = bookClicked.volumeInfo.imageLinks.smallThumbnail;\n      }\n    const data = {\n        title: bookClicked.volumeInfo.title,\n        authors: bookClicked.volumeInfo.authors,\n        description: bookClicked.volumeInfo.description,\n        image: bookImg,\n        link: bookClicked.volumeInfo.link\n    }\n    // axios.post(\"/api/books\", data).then(res => {\n    //     console.log(\"BOOK ADDED\");\n    // });\n\n    API.saveBook(data).then(res => {\n        console.log(\"BOOK ADDED\");\n    })\n\n};\n\nconst handleSearch = (event, query) => {\n    event.preventDefault();\n    if(query) {\n        return searchBooks(query);\n    }\n};\n\nconst printBooks = () => {\n    if(books.length > 0) {\n        return books.map(book => {\n            let bookInfo = book.volumeInfo;\n            let bookImg = \"img/noimgavail.jpg\";\n            if(bookInfo.imageLinks) {\n                bookImg = bookInfo.imageLinks.smallThumbnail;\n            }\n            return (\n                <Book\n                  key={book.id}\n                  id={book.id}\n                  img={bookImg}\n                  title={bookInfo.title}\n                  description={bookInfo.description}\n                  authors={bookInfo.authors}\n                  link={bookInfo.previewLink}\n                  button=\"add\"\n                  addBook={addBook}\n                />\n            );\n        });\n    } else {\n        return (\n            <div key=\"none\">\n                Search for a book by entering title and author and pressing submit.\n            </div>\n        );\n    }\n};\n\nreturn (\n    <div>\n        <Search handleSearch={handleSearch} />\n        <hr></hr>\n        <div className =\"container\">\n            <div className=\"row\">\n                {printBooks()}\n            </div>\n        </div>\n    </div>\n)\n}","import React, { useState, useEffect } from \"react\";\nimport Book from \"../components/Book\";\nimport axios from \"axios\";\n\n\nexport default function BookList() {\n    const [books, setBooks] = useState([]);\n\n    useEffect(() => {\n        fetchBooks();\n    }, []);\n\n    const fetchBooks = () => {\n        axios.get(\"/api/books\").then(booksDB => {\n            setBooks(booksDB.data);\n            console.log(books);\n        });\n    };\n\n    const renderBooks = () => {\n        let bookCards = [];\n        if(books.length > 0) {\n            bookCards.push(\n                books.map(book => {\n                    return (\n                        <Book\n                          key={book._id}\n                          _id={book._id}\n                          img={book.image}\n                          title={book.title}\n                          description={book.description}\n                          authors={book.authors}\n                          link={book.link}\n                          button=\"delete\"\n                          deleteBook={deleteBook}\n                        />\n                    );\n                })\n            );\n        } else {\n            bookCards.push(<div key=\"none\">There are no saved books</div>);\n        }\n        return bookCards;\n    };\n\n    const deleteBook = bookId => {\n        console.log(bookId);\n        axios.delete(\"api/books/\" + bookId).then(res => {\n            console.log(\"BOOK DELETED\");\n            fetchBooks();\n        });\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">{renderBooks()}</div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport BookSearch from \"./pages/BookSearch\";\nimport BookList from \"./pages/BooksList\";\nimport NoMatch from \"./pages/NoMatch\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path = \"/\" component={BookSearch} />\n          <Route exact path=\"/list\" component={BookList} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}